{"version":3,"sources":["src/utils/format.ts","src/components/TickerItem/ticker.styles.ts","src/components/TickerItem/TickerItem.tsx","src/requests/index.ts","src/components/TickerList/TickerList.tsx","src/components/PairItem/pair.styles.ts","src/components/PairItem/PairItem.tsx","src/components/PairList/PairList.tsx","src/pages/Home/home.styles.ts","src/pages/Home/index.ts","src/pages/Home/HomeScreen.tsx","src/utils/parser.ts","src/theme/theme.ts","App.tsx","index.js"],"names":["formatNumber","_number","precision","currency","toString","format","symbol","replace","TickerItemWraper","styled","Pressable","props","theme","colors","card","Title","Text","primaryTextColor","CoinIcon","Image","Row","View","Price","Volume","Changes","isGreen","TickerItem","ticker","source","uri","baseAsset","iconUrl","toLowerCase","quoteAsset","volume","lastPrice","Number","change24h","toFixed","TickerList","tickers","selectedPair","renderItem","useCallback","item","keyExtractor","FlatList","data","filter","PairItemWraper","isSelected","PairItem","pair","onSelectPair","onPress","PairList","pairs","horizontal","showsHorizontalScrollIndicator","extraData","Container","maxWidth","background","HomeScreen","useState","setTickers","setPairs","setSelectedPair","useQuery","a","async","fetch","baseUrl","then","res","json","useEffect","result","apiResponseData","forEach","responseItem","startsWith","includes","split","substring","length","push","Set","sort","parseResponseData","maxWidthPercent","primaryColor","secondaryColor","secondaryTextColor","queryClient","QueryClient","registerRootComponent","client","SafeAreaView","style","flex","backgroundColor","Home","StatusBar"],"mappings":"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","file":"static/js/app.6df3b97c.chunk.js","sourcesContent":["import currency from 'currency.js';\n\nexport const formatNumber = (_number: Number | string, precision:number = 8) => {\n  if (!_number || _number === 'NaN') {\n    return '';\n  }\n  return currency(_number.toString(), { precision }).format({ symbol: '' }).replace(/\\.?0+$/, '');\n};\n","import styled from 'styled-components/native';\n\nexport const TickerItemWraper = styled.Pressable`\n  background-color:  ${(props) => props.theme.colors.card};\n  border-radius: 5px;\n  height: 120px;\n  width: 90%;\n  align-self: center;\n  justify-content: space-between;\n  align-items: center;\n  margin:5px;\n  padding:5px;\n  flex-direction: row;\n`;\n\nexport const Title = styled.Text`\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.colors.primaryTextColor};\n`;\n\nexport const CoinIcon = styled.Image`\n  width: 50px;\n  height: 50px;\n  margin:10px;\n`;\n\nexport const Row = styled.View`\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Price = styled.Text`\n  font-weight: bold;\n  font-size: 14px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.colors.primaryTextColor};\n`;\n\nexport const Volume = styled.Text`\n  font-size: 14px;\n  color: ${(props) => props.theme.colors.primaryTextColor};\n`;\n\nexport const Changes = styled.Text`\n  font-weight: bold;\n  font-size: 12px;\n  text-align: right;\n  margin-right: 10px;\n  color: ${(props:{isGreen:boolean}) => (props.isGreen ? 'green' : 'red')};\n`;\n","import React from 'react';\nimport { TickerType } from 'src/types';\nimport { getCoinIcon } from 'src/requests';\nimport { View } from 'react-native';\nimport { formatNumber } from 'src/utils/format';\nimport {\n  Changes,\n  CoinIcon, Price, Row, TickerItemWraper, Title, Volume,\n} from './ticker.styles';\n\ninterface OwnProps{\n    ticker:TickerType\n}\nexport function TickerItem({ ticker }:OwnProps) {\n  return (\n    <TickerItemWraper>\n      <Row>\n        <CoinIcon source={{ uri: getCoinIcon(ticker.baseAsset) }} />\n        <View>\n          <Title>{`${ticker.baseAsset} / ${ticker.quoteAsset}`}</Title>\n          <Volume>{`${formatNumber(ticker.volume, 2)} ${ticker.quoteAsset}`}</Volume>\n        </View>\n      </Row>\n      <View>\n        <Price>{formatNumber(ticker.lastPrice)}</Price>\n        <Changes isGreen={Number(ticker.change24h) > 0}>{`${Number(ticker.change24h).toFixed(1)}%`}</Changes>\n      </View>\n    </TickerItemWraper>\n  );\n}\n","import { baseUrl, iconUrl } from './config';\n\nexport const getAllTickers = async () => fetch(`${baseUrl}/tickers?symbols=ALL`);\nexport const getCoinIcon = (symbol:string) => `${iconUrl}/${symbol.toLowerCase()}`;\n","import React, { useCallback } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { TickerType } from 'src/types';\nimport { TickerItem } from '../TickerItem';\n\ninterface OwnProps{\n    tickers:TickerType[];\n    selectedPair:string,\n}\n\nexport function TickerList({ tickers, selectedPair }:OwnProps) {\n  const renderItem = useCallback(({ item }) => <TickerItem ticker={item} />, []);\n  const keyExtractor = useCallback((item) => item.symbol, []);\n  return (\n    <View>\n      <FlatList\n        data={tickers.filter((ticker) => ticker.quoteAsset === selectedPair)}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n      />\n    </View>\n  );\n}\n","import styled from 'styled-components/native';\n\nexport const PairItemWraper = styled.Pressable`\n  padding: 10px;\n  width: 90px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  margin: 5px;\n  border-radius: 5px;\n  background-color: ${(props:{isSelected:boolean}) => (props.isSelected ? '#01A781' : '#c7c9d6')};\n`;\n\nexport const Text = styled.Text`\n  font-size: 14px;\n  color: ${(props) => props.theme.colors.primaryTextColor};\n  font-weight: ${(props:{isSelected:boolean}) => (props.isSelected ? 'bold' : 'normal')};\n`;\n","import React from 'react';\nimport { PairItemWraper, Text } from './pair.styles';\n\ninterface OwnProps{\n    pair:string,\n    isSelected:boolean,\n    onSelectPair:(pair:string)=>void\n}\n\nexport function PairItem({ pair, isSelected, onSelectPair }:OwnProps) {\n  return (\n    <PairItemWraper isSelected={isSelected} onPress={() => onSelectPair(pair)}>\n      <Text isSelected={isSelected}>{pair}</Text>\n    </PairItemWraper>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { PairItem } from '../PairItem';\n\ninterface OwnProps{\n    pairs:string[];\n    onSelectPair:(pair:string)=>void;\n    selectedPair:string;\n}\n\nexport function PairList({ pairs, onSelectPair, selectedPair }:OwnProps) {\n  const renderItem = useCallback(({ item }) => (\n    <PairItem\n      isSelected={selectedPair === item}\n      onSelectPair={onSelectPair}\n      pair={item}\n    />\n  ), [onSelectPair, selectedPair]);\n\n  const keyExtractor = useCallback((item) => item, []);\n\n  return (\n    <View>\n      <FlatList\n        data={pairs}\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        extraData={selectedPair}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n      />\n    </View>\n  );\n}\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n  width: 100%;\n  max-width:${(props) => props.theme.maxWidth};\n  align-self: center;\n  background-color: ${(props) => props.theme.colors.background};\n`;\n","import HomeScreen from './HomeScreen';\n\nexport default HomeScreen;\n","import React, { useEffect, useState } from 'react';\nimport { PairList, TickerList } from 'src/components';\nimport { TickerType } from 'src/types';\nimport { getAllTickers } from 'src/requests';\nimport { useQuery } from 'react-query';\nimport { parseResponseData } from 'src/utils/parser';\nimport { Container } from './home.styles';\n\nexport default function HomeScreen() {\n  const [tickers, setTickers] = useState<TickerType[]>([]);\n  const [pairs, setPairs] = useState<string[]>([]);\n  const [selectedPair, setSelectedPair] = useState<string>('BTC');\n\n  const { data } = useQuery('tickers',\n    () => getAllTickers().then((res) => res.json()));\n\n  useEffect(() => {\n    if (data) {\n      const result = parseResponseData(data);\n      setTickers(result.tickers);\n      setPairs(result.pairs);\n    }\n  }, [data]);\n\n  return (\n    <Container>\n      <PairList\n        pairs={pairs}\n        onSelectPair={setSelectedPair}\n        selectedPair={selectedPair}\n      />\n      <TickerList\n        tickers={tickers}\n        selectedPair={selectedPair}\n      />\n    </Container>\n  );\n}\n","import { TickerType, ResponseType } from 'src/types';\n\nexport function parseResponseData(apiResponseData:ResponseType[]) {\n  const tickers: TickerType[] = [];\n  let pairs:string[] = [];\n  apiResponseData.forEach((responseItem) => {\n    const symbol = responseItem[0].toString();\n    // just show pair currency, not funding\n    if (symbol.startsWith('t')) {\n      const ticker: TickerType = <TickerType>{};\n      ticker.symbol = symbol.replace('t', '');\n      ticker.change24h = Number(responseItem[6]) * 100;\n      ticker.lastPrice = Number(responseItem[7]);\n      ticker.volume = Number(responseItem[8]);\n      if (symbol.includes(':')) {\n        ticker.baseAsset = ticker.symbol.split(':')[0].toString();\n        ticker.quoteAsset = ticker.symbol.split(':')[1].toString();\n      } else {\n        ticker.baseAsset = ticker.symbol.substring(0, 3);\n        ticker.quoteAsset = ticker.symbol.substring(3, ticker.symbol.length);\n      }\n      tickers.push(ticker);\n      pairs.push(ticker.quoteAsset);\n    }\n  });\n  // distinct and sort pairs\n  pairs = [...new Set(pairs)].sort();\n  return { tickers, pairs };\n}\n","import { DefaultTheme } from 'styled-components/native';\n\nexport const theme: DefaultTheme = {\n  maxWidth: '500px',\n  maxWidthPercent: '90%',\n  colors: {\n    background: '#0E3452',\n    card: '#172D3E',\n    primaryColor: '#01A781',\n    secondaryColor: '#E65E58',\n    primaryTextColor: '#ffffff',\n    secondaryTextColor: '#969B9E',\n  },\n};\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { ThemeProvider } from 'styled-components/native';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { HomeScreen } from 'src/pages';\nimport { theme } from 'src/theme';\n\nconst queryClient = new QueryClient();\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <SafeAreaView style={{ flex: 1, backgroundColor: theme.colors.background }}>\n          <HomeScreen />\n          <StatusBar style=\"auto\" />\n        </SafeAreaView>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n","import 'react-native-gesture-handler';\nimport { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}